#!/bin/bash --login
########## Define Resources Needed with SBATCH Lines ##########
 
#SBATCH --time=40:00:00             # limit of wall clock time - how long the job will run (same as -t)
#SBATCH --ntasks=1                  # number of tasks - how many tasks (nodes) that you require (same as -n)
#SBATCH --cpus-per-task=16           # number of CPUs (or cores) per task (same as -c)
#SBATCH --mem=40G                    # memory required per node - amount of memory (in bytes)
#SBATCH --job-name Assembly        # you can give your job a name for easier identification (same as -J)
 

########## Command Lines to Run ##########

echo "=========================="
echo "=========================="
cat $0
echo "=========================="
echo "=========================="

 
module purge
module load GCC/6.4.0-2.28  OpenMPI/2.1.1
module load BWA/0.7.17                   ### load necessary modules, e.g.
module load powertools
module list

if [ -n "$SLURM_CPUS_PER_TASK" ]; then
	omp_threads=$SLURM_CPUS_PER_TASK
else
	omp_threads=1
fi
echo "Running on $omp_threads"

time bwa mem -t $omp_threads Caenorhabditis_elegans.WBcel235.dna.toplevel.fa.gz /mnt/scratch/colbrydi/BWA_Example_Data/DataSet01_Celegans_Paired200Id200Pexp100Cov10E1N0GenomicControl_1.fq.gz /mnt/scratch/colbrydi/BWA_Example_Data/DataSet01_Celegans_Paired200Id200Pexp100Cov10E1N0GenomicControl_2.fq.gz > DataSet01_Celegans_Paired200Id200Pexp100Cov10E1N0GenomicControl_1t_aln.sam ### call your executable

js -j $SLURM_JOB_ID     ### write job information to output file
